syntax = "proto3";
package alice.checkers.v1;

option go_package = "github.com/alice/checkers";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "alice/checkers/v1/types.proto";
import "cosmos_proto/cosmos.proto";


// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
  repeated IndexedStoredGame indexedStoredGameList = 2 [(gogoproto.nullable) = false];
}



// Msg defines the module Msg service.
service Msg {
option (cosmos.msg.v1.service) = true;

// CreateGame create a game.
rpc CreateGame(MsgCreateGame)
returns (MsgCreateGameResponse);
}

// MsgCreateGame defines the Msg/CreateGame request type.
message MsgCreateGame {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the message sender.
  string creator = 1;
  string index = 2 ;
  string black = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string red = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 wager = 11;
}

// MsgCreateGameResponse defines the Msg/CreateGame response type.
message MsgCreateGameResponse {}
